package com.unistart.entities;
// Generated Sep 20, 2017 9:59:41 AM by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * MajorUniversity generated by hbm2java
 */
@Entity
@Table(name = "Major_University", schema = "dbo", catalog = "University")
public class MajorUniversity implements java.io.Serializable {

	private int id;
	private Block block;
	private Major major;
	private University university;
	private Set<ScoreHistory> scoreHistories = new HashSet<ScoreHistory>(0);
	private Set<ScoreHistory> scoreHistories_1 = new HashSet<ScoreHistory>(0);
	private Set<Block> blocks = new HashSet<Block>(0);

	public MajorUniversity() {
	}

	public MajorUniversity(int id) {
		this.id = id;
	}

	public MajorUniversity(int id, Block block, Major major, University university, Set<ScoreHistory> scoreHistories,
			Set<ScoreHistory> scoreHistories_1, Set<Block> blocks) {
		this.id = id;
		this.block = block;
		this.major = major;
		this.university = university;
		this.scoreHistories = scoreHistories;
		this.scoreHistories_1 = scoreHistories_1;
		this.blocks = blocks;
	}

	@Id

	@Column(name = "Id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BlockId")
	public Block getBlock() {
		return this.block;
	}

	public void setBlock(Block block) {
		this.block = block;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MajorId")
	public Major getMajor() {
		return this.major;
	}

	public void setMajor(Major major) {
		this.major = major;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UniversityId")
	public University getUniversity() {
		return this.university;
	}

	public void setUniversity(University university) {
		this.university = university;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "majorUniversity")
	public Set<ScoreHistory> getScoreHistories() {
		return this.scoreHistories;
	}

	public void setScoreHistories(Set<ScoreHistory> scoreHistories) {
		this.scoreHistories = scoreHistories;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "majorUniversity")
	public Set<ScoreHistory> getScoreHistories_1() {
		return this.scoreHistories_1;
	}

	public void setScoreHistories_1(Set<ScoreHistory> scoreHistories_1) {
		this.scoreHistories_1 = scoreHistories_1;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "BlockMajorUniversity", schema = "dbo", catalog = "University", joinColumns = {
			@JoinColumn(name = "MajorUniversityID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "BLockId", nullable = false, updatable = false) })
	public Set<Block> getBlocks() {
		return this.blocks;
	}

	public void setBlocks(Set<Block> blocks) {
		this.blocks = blocks;
	}

}
