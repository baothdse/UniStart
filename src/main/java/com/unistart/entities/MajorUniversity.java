package com.unistart.entities;
// Generated Oct 1, 2017 10:03:30 PM by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * MajorUniversity generated by hbm2java
 */
@Entity
@Table(name = "Major_University", schema = "dbo", catalog = "University")
public class MajorUniversity implements java.io.Serializable {

	private Integer id;
	private Major major;
	private University university;
	private byte[] majorUniversitiesKey;
	private Set<BlockMajorUniversity> blockMajorUniversities = new HashSet<BlockMajorUniversity>(0);

	public MajorUniversity() {
	}

	public MajorUniversity(Integer id) {
		this.id = id;
	}

	public MajorUniversity(Integer id, Major major, University university, byte[] majorUniversitiesKey,
			Set<BlockMajorUniversity> blockMajorUniversities) {
		this.id = id;
		this.major = major;
		this.university = university;
		this.majorUniversitiesKey = majorUniversitiesKey;
		this.blockMajorUniversities = blockMajorUniversities;
	}

	@Id

	@Column(name = "Id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MajorId")
	public Major getMajor() {
		return this.major;
	}

	public void setMajor(Major major) {
		this.major = major;
	}

	@JsonIgnore
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "UniversityId")
	public University getUniversity() {
		return this.university;
	}

	public void setUniversity(University university) {
		this.university = university;
	}

	@Column(name = "majorUniversities_KEY")
	public byte[] getMajorUniversitiesKey() {
		return this.majorUniversitiesKey;
	}

	public void setMajorUniversitiesKey(byte[] majorUniversitiesKey) {
		this.majorUniversitiesKey = majorUniversitiesKey;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "majorUniversity")
	public Set<BlockMajorUniversity> getBlockMajorUniversities() {
		return this.blockMajorUniversities;
	}

	public void setBlockMajorUniversities(Set<BlockMajorUniversity> blockMajorUniversities) {
		this.blockMajorUniversities = blockMajorUniversities;
	}

}
