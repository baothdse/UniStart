package com.unistart.entities;
// Generated Sep 20, 2017 9:59:41 AM by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonBackReference;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "Users", schema = "dbo", catalog = "University")
public class Users implements java.io.Serializable {

	private int id;
	@JsonBackReference
	private Role role;
	private University university;
	private String username;
	private String password;
	private String name;
	private String image;
	private String email;
	private boolean isActive;
	private String avatar;
	private Set<Provider> providers = new HashSet<Provider>(0);
	private Set<Review> reviews = new HashSet<Review>(0);
	private Set<Mbtiresult> mbtiresults = new HashSet<Mbtiresult>(0);
	private Set<Review> reviews_1 = new HashSet<Review>(0);
	private Set<Mbtiresult> mbtiresults_1 = new HashSet<Mbtiresult>(0);
	private Set<Provider> providers_1 = new HashSet<Provider>(0);

	public Users() {
	}

	public Users(int id, Role role, String username, String password, boolean isActive) {
		this.id = id;
		this.role = role;
		this.username = username;
		this.password = password;
		this.isActive = isActive;
	}


	public Users(Role role, String username, String password, String name, String image, String email) {
		super();
		this.role = role;
		this.username = username;
		this.password = password;
		this.name = name;
		this.image = image;
		this.email = email;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "Id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RoleID", nullable = false)
	public Role getRole() {
		return this.role;
	}

	public void setRole(Role role) {
		this.role = role;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UniversityId")
	public University getUniversity() {
		return this.university;
	}

	public void setUniversity(University university) {
		this.university = university;
	}

	@Column(name = "Username", nullable = false, length = 50)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "Password", nullable = false)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "Name", length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "Image")
	public String getImage() {
		return this.image;
	}

	public void setImage(String image) {
		this.image = image;
	}

	@Column(name = "Email")
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "IsActive", nullable = false)
	public boolean isIsActive() {
		return this.isActive;
	}

	public void setIsActive(boolean isActive) {
		this.isActive = isActive;
	}

	@Column(name = "Avatar")
	public String getAvatar() {
		return this.avatar;
	}

	public void setAvatar(String avatar) {
		this.avatar = avatar;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Provider> getProviders() {
		return this.providers;
	}

	public void setProviders(Set<Provider> providers) {
		this.providers = providers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Review> getReviews() {
		return this.reviews;
	}

	public void setReviews(Set<Review> reviews) {
		this.reviews = reviews;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Mbtiresult> getMbtiresults() {
		return this.mbtiresults;
	}

	public void setMbtiresults(Set<Mbtiresult> mbtiresults) {
		this.mbtiresults = mbtiresults;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Review> getReviews_1() {
		return this.reviews_1;
	}

	public void setReviews_1(Set<Review> reviews_1) {
		this.reviews_1 = reviews_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Mbtiresult> getMbtiresults_1() {
		return this.mbtiresults_1;
	}

	public void setMbtiresults_1(Set<Mbtiresult> mbtiresults_1) {
		this.mbtiresults_1 = mbtiresults_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Provider> getProviders_1() {
		return this.providers_1;
	}

	public void setProviders_1(Set<Provider> providers_1) {
		this.providers_1 = providers_1;
	}

}
